# Интервал проверки сервисов (каждые 2 минуты)
set daemon 60
# Лог-файл, файл не очищается автоматически, поэтому нужно
# обеспечить его ротацию через logrotate.
# Так же можно отправлять логи на syslog-сервер
set log /var/log/monit.log
# Файл с уникальным идентификатором вашего monit
set idfile /var/lib/monit/id
# Файл для хранения статуса проверки сервисов, необходим при
# рестарте для возобновления проверки с последнего места
set statefile /var/lib/monit/state
# Настройки почтового сервера через который monit будет отправлять оповещения
set mailserver localhost
    with timeout 15 seconds
# Параметр, определяющий размер очереди оповещений.
# Если почтовый сервер вдруг будет недоступен, то в этот каталог
# будут складываться оповещения, как только почтовый сервер вновь
# будет доступен эти оповещения будут доставлены получателям.
set eventqueue 
    basedir /var/lib/monit/events
    slots 100
# Формат отправляемых оповещений, он достаточно хорошо кастомизируется
# под свои нужны. Подробнее можно почитать в документации.
# У себя я выставляю нужное поле reply-to, from и subject чтобы по теме
# сообщения было сразу понятно что за сервис дал сбой.
# У меня тема будет выглядеть так: programs74.ru-ping ICMP failed at Fri, 29 Sep 2017 11:38:51
set mail-format {
   from: Server <monit@server.mysite.ru>
   reply-to: monit@mysite.ru
   subject: $SERVICE $EVENT at $DATE
}
# На какой адрес будем отправлять оповещения.
# Параметр поддерживает множество дополнительных настроек, к примеру можно
# отправлять определенные типы оповещений на определенные адреса, что довольно
# удобно в случае разделения полномочий между сотрудниками.
# Например:
# set alert it@mycompany.ru { timeout, resource, icmp, connection }
# set alert security@mycompany.ru on { checksum, permission, uid, gid }
# set alert admins@mycompany.ru
# Таким образом:
# все события смены состояния соединений, изменения ресурсов (к примеру loadavg,
# memory usage, cpu usage), пропадание ping (например: if failed icmp type echo)
# или изменения статуса соединения с сервисами (например: 
# if failed port 53 use type udp protocol dns) будут отправлены в отдел ИТ
# на it@mycompany.ru
# все события смены контрольных сумм, прав доступа, владельца файлов на сервере
# мы отправляем отдел безопасности на security@mycompany.ru
# все остальные события отправляем на admins@mycompany.ru
# У меня все события отправляются на 1 адрес.
set alert monit@mysite.ru
# Настройки встроенного web-интерфейса, через который можно посмотреть
# состояние сервисов. Web-интерфейс Monit достаточно простой, но информативный.
# Для небольшой компании с небольшим количеством серверов заходить на каждый сервер
# для визуального контроля будет удобно, но когда количество серверов с monit
# более 5 лучше приобрести платный коллектор событий M/Monit, помимо удобного
# сбора, консолидации и анализа событий со всех серверов monit он так же обладает
# дополнительными удобными механизмами оповещения на email и jabber.
# Для минимальной работы без https достаточно таких опций:
# set httpd port 2812
#     allow username:password
# У меня настройки чуть сложнее, я включаю https, а так же устанавливаю
# ограничения на подключение к monit только с определенных ip адресов и
# только под определенным логином и паролем.
# Так же я привязал monit к определенному интерфейсу сервера, см. use address
# Обратите внимание на allow XX.XX.XX.XX, вы должны обязательно разрешить
# соединятся с monit с адреса из use address XX.XX.XX.XX, иначе при попытке
# вывести статус сервисов командой monit status Вы получите ошибку.
# Так же обратите внимание на строку allow monit:XXXXX в ней вместо XXXXX необходимо
# придумать и указать пароль для пользователя monit, если это не сделать, то
# при попытке вывести статус сервисов консольной командой monit status Вы получите
# ошибку "You are not authorized to access monit"
set httpd port 2812 and
   ssl enable
   with ssl {
        pemfile: /etc/monit/ssl/monit.pem
        ciphers: "ALL:!DES:!3DES:!RC4:!aNULL:!LOW:!EXP:!IDEA:!MD5:@STRENGTH"
   }
   use address XX.XX.XX.XX
   allow ZZZ.ZZZ.ZZZ.ZZZ/24
   allow YY.YY.YY.YY
   allow XX.XX.XX.XX
   allow localhost
   allow monit:XXXXX
   allow @monitadmin
# Глобальные настройки проверки ssl соединений:
# 1. Обязательная проверка SSL сертификатов на всех ssl соединениях;
# 2. Разрешаем самоподписные ssl-сертификаты (по умолчанию это запрещено);
# Если вдруг нам захочется проверить какой-то удаленный сервис без
# обязательной проверки ssl-сертификата, то это можно сделать указав
# опцию {verify: disable}, подробнее об этом написано в документации.
set ssl options {
    verify: enable
    selfsigned: allow
}
# Каталог для подключения дополнительных файлов конфигурации monit
include /etc/monit/conf.d/*
